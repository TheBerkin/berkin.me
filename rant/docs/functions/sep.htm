<!DOCTYPE html>
<html>
	<head>
		<title>
			sep - Rant Docs
		</title><link rel="stylesheet" href="../css/rant.css" type="text/css" /><link rel="stylesheet" href="../css/prism.css" type="text/css" />
	</head><body>
		<div id="page">
			<h1>
				[sep]
			</h1><p><i>Aliases: <b>s</b></i></p><p>The <code>sep</code> function is a block attribute that specifies a pattern to evaluate between repeater iterations.</p>
			<h2>
				Syntax
			</h2><code id="form-1" class="block language-rant">[sep: separator]</code><h3>
				Description
			</h3><p>Sets the separator pattern for the next block.</p>
			<h3>
				Parameters
			</h3><ul class="nobullet">
				<li><span title="Accepts a pattern. It may be run more than once." class="type pattern">pattern</span> <b class="param">separator</b><p class="paramdesc">The separator pattern to run between iterations of the next block.</p>
				</li>
			</ul><h2>
				Examples
			</h2><h3>
				Comma delimiter
			</h3><p>The following example demonstrates how <code>sep</code> can be used with <code>rep</code> to print a comma-separated list.</p>
			<code class="block language-rant"># Generate ten unique plural nouns
[rep:10][sep:,\s]
{
  &lt;noun.plural::!x&gt;
}
</code><code class="block">minivans, banisters, nails, wrinkles, kites, guitarists, boots, children, plumbers, erect-crested penguins</code><h2>
				See also
			</h2><ul>
				<li><a href="rep">rep</a></li><li><a href="repeach">repeach</a></li><li><a href="before">before</a></li><li><a href="after">after</a></li><li><a href="rs">rs</a></li>
			</ul>
		</div><script type="text/javascript" src="../js/prism.js">

		</script><script type="text/javascript" src="../js/prism-rant-keywords.js">

		</script><script type="text/javascript" src="../js/prism-rant.js">

		</script>
	</body>
</html>